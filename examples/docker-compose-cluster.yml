version: '3'
services:
  server:
    image: 'examples_server'
    # build: 
    #   context: .
    ports:
      - "8030:8030"
    networks:
      - sanic-network
    environment:
      POSTGRES_SERVICE_DB_NAME: postgres
      POSTGRES_SERVICE_USER: postgres
      POSTGRES_SERVICE_HOST: db
      POSTGRES_SERVICE_PORT: 5432
      ACCESS_CONTROL_ALLOW_ORIGIN: "*"
      ACCESS_CONTROL_ALLOW_HEADERS: "Content-Type"
      ACCESS_CONTROL_ALLOW_METHODS: "POST, PUT, DELETE, GET"
      ZIPKIN_SERVER: 'http://zipkin:9411/api/v1/spans'
      CONSUL_HTTP_ADDR: 'consul:8500'
      #command: python -m sanic server.app --host=0.0.0.0 --port=8000 --workers=4
    depends_on:
      - "db"
    command: ["python", "-m", "user_service.server"]
    #command: ["python", "-m", 'sanic', "service.server.app", "--workers=4", "--port=8000", "--host=0.0.0.0"]
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.role == worker

  db:
    image: "postgres:9.6"
    ports:
      - "5432:5432"
    networks:
      - sanic-network
    deploy:
      placement:
        constraints:
          - node.role == manager

  zipkin:
    image: "openzipkin/zipkin:2.4.2"
    ports:
      - "9410:9410"
      - "9411:9411"
    networks:
      - sanic-network
    deploy:
      placement:
        constraints:
          - node.role == manager

  swagger:
    image: "swaggerapi/swagger-ui:v3.0.5"
    ports:
      - "8090:8080"
    networks:
      - sanic-network
    environment:
      API_URL: "http://localhost:8000/openapi/spec.json"
    deploy:
      placement:
        constraints:
          - node.role == manager

#   consul1:
#     image: "progrium/consul"
#     networks:
#       - sanic-network
#     deploy:
#       placement:
#         constraints:
#           - node.role == manager
#     ports:
#       - "8500:8500"
#       - "8300:8300"
#       - "8301:8301"
#       - "8301:8301/udp"
#       - "8302:8302"
#       - "8302:8302/udp"
#       - "8400:8400"
#     command: ["-server", "-advertise 192.168.99.100", "-bootstrap"]

#   consul2:
#     image: "progrium/consul"
#     networks:
#       - sanic-network
#     depends_on:
#       - consul1
#     deploy:
#       replicas: 2
#       placement:
#         constraints:
#           - node.role == worker
#     command: ["-server", "-advertise 192.168.99.101", "-join=192.168.99.100"]

networks:
  sanic-network:
    external:
        name: ms_sanic-network